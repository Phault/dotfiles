#!/usr/bin/env bash

# Initialization for interactive shells (even login shells, since we source it from .bash_profile)

if [ -f "$HOME/.cargo/env" ]; then
	. "$HOME/.cargo/env"
fi

if [ -d "$HOME/bin" ]; then
	export PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
	export PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "/home/linuxbrew/.linuxbrew" ]; then
	export HOMEBREW_PREFIX="/home/linuxbrew/.linuxbrew";
	export HOMEBREW_CELLAR="/home/linuxbrew/.linuxbrew/Cellar";
	export HOMEBREW_REPOSITORY="/home/linuxbrew/.linuxbrew/Homebrew";
	export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin${PATH+:$PATH}";
	export MANPATH="/home/linuxbrew/.linuxbrew/share/man${MANPATH+:$MANPATH}:";
	export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:${INFOPATH:-}";
fi

export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

export PATH="$HOME/.dotnet/tools:$PATH"

export PATH="$HOME/.console-ninja/.bin:$PATH"

export PATH="$HOME/.orbstack/bin:$PATH"

export PATH="$HOME/.config/emacs/bin:$PATH"

export EDITOR="nvim"

function br {
	local cmd cmd_file code
	cmd_file=$(mktemp)
	if broot --outcmd "$cmd_file" "$@"; then
		cmd=$(<"$cmd_file")
		command rm -f "$cmd_file"
		eval "$cmd"
	else
		code=$?
		command rm -f "$cmd_file"
		return "$code"
	fi
}

function ya {
	local tmp
	tmp="$(mktemp -t "yazi-cwd.XXXXX")"
	yazi --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd" || exit
	fi
	rm -f -- "$tmp"
}

eval "$(starship init bash)"
